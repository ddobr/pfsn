name: CI/CD Pipeline

on:
  push:
    branches:
      - main 

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Test
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    - run: cd ./client
    - run: npm ci
    - run: npm run test

  build-and-push:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.PFSN_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      
    - name: Set timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend Docker image
      env:
        TIMESTAMP: ${{ steps.timestamp.outputs.TIMESTAMP }}
      run: docker build -t ddobr/pfsn-backend:$TIMESTAMP ./backend

    - name: Build frontend Docker image
      env:
        TIMESTAMP: ${{ steps.timestamp.outputs.TIMESTAMP }}
      run: docker build -t ddobr/pfsn-frontend:$TIMESTAMP ./client

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push backend Docker image
      env:
        TIMESTAMP: ${{ steps.timestamp.outputs.TIMESTAMP }}
      run: docker push ddobr/pfsn-backend:$TIMESTAMP

    - name: Push frontend Docker image
      env:
        TIMESTAMP: ${{ steps.timestamp.outputs.TIMESTAMP }}
      run: docker push ddobr/pfsn-frontend:$TIMESTAMP

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Deploy to VPS
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa  user@your_vps_ip << 'EOF'
          cd ./pfsn
          docker-compose down
          docker-compose up -d
        EOF